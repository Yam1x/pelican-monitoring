name: Performance + robots.txt Monitoring on Prod

on:
  push:
    branches:
      - feature/*

jobs:
  validate-robots:
    runs-on: ubuntu-24.04
    timeout-minutes: 2
    steps:
      - name: Validate robots.txt & TEST SUMMARY
        id: robots_txt_validation
        run: |
          echo "Fetching robots.txt..."
          curl -sfL https://chelzoo.ru/robots.txt -o robots.txt
          echo "Reading actual content..."
          cat <<EOF > expected_robots.txt
          # *
          User-agent: *
          Disallow: /components

          # Host
          Host: https://chelzoo.ru

          # Sitemaps
          Sitemap: https://chelzoo.ru/api/get-sitemap
          EOF
          echo "Comparing with expected content..."
          if ! diff -u expected_robots.txt robots.txt; then
            echo "❌ robots.txt does not match the expected content."
            exit 1
          fi
          echo "✅ robots.txt matches expected content."

  jmeter-tests:
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          
      - name: Install dependencies
        run: npm ci

      - name: Cache JMeter
        id: cache-jmeter
        uses: actions/cache@v4
        with:
          path: ./apache-jmeter-5.6.3
          key: jmeter-${{ runner.os }}-v5.6.3

      - name: Download JMeter if not cached
        if: steps.cache-jmeter.outputs.cache-hit != 'true'
        run: |
          wget https://dlcdn.apache.org//jmeter/binaries/apache-jmeter-5.6.3.tgz
          tar -xzf apache-jmeter-5.6.3.tgz

      - name: Add JMeter to PATH
        run: echo "$PWD/apache-jmeter-5.6.3/bin" >> $GITHUB_PATH

      - name: Create report directories
        run: |
          mkdir -p ./report
          mkdir -p ./result
          mkdir -p ./errors

      - name: Run JMeter - Home Page
        run: |
          mkdir -p ./report/home-page
          if ! jmeter -n -t ./tests/jmeter-tests/home-page.jmx \
            -l ./report/home-page/home-page.jtl \
            -Jjmeter.save.saveservice.output_format=xml \
            -Jjmeter.save.saveservice.print_field_names=true \
            -Jjmeter.save.saveservice.response_data.on_error=true \
            -Jjmeter.save.saveservice.bytes=true \
            -Jjmeter.save.saveservice.timestamp_format=ms; then
            echo "JMETER_FAIL_homePage=1" >> $GITHUB_ENV
            echo "❌ JMeter test execution failed: Home Page" >> ./errors/summary.txt
          fi

          cp ./report/home-page/home-page.jtl ./result/home-page.jtl || true

      - name: Run JMeter - Documents Page
        run: |
          mkdir -p ./report/documents-page
          if ! jmeter -n -t ./tests/jmeter-tests/documents-page.jmx \
            -l ./report/documents-page/documents-page.jtl \
            -Jjmeter.save.saveservice.output_format=xml \
            -Jjmeter.save.saveservice.print_field_names=true \
            -Jjmeter.save.saveservice.response_data.on_error=true \
            -Jjmeter.save.saveservice.bytes=true \
            -Jjmeter.save.saveservice.sent_bytes=true \
            -Jjmeter.save.saveservice.label=true \
            -Jjmeter.save.saveservice.latency=true \
            -Jjmeter.save.saveservice.response_code=true \
            -Jjmeter.save.saveservice.response_message=true \
            -Jjmeter.save.saveservice.successful=true \
            -Jjmeter.save.saveservice.thread_counts=true \
            -Jjmeter.save.saveservice.thread_name=true \
            -Jjmeter.save.saveservice.time=true \
            -Jjmeter.save.saveservice.connect_time=true \
            -Jjmeter.save.saveservice.assertion_results_failure_message=true \
            -Jjmeter.save.saveservice.timestamp_format=ms; then
            echo "JMETER_FAIL_documentsPage=1" >> $GITHUB_ENV
            echo "❌ JMeter test execution failed: Documents Page" >> ./errors/summary.txt
          fi

          cp ./report/documents-page/documents-page.jtl ./result/documents-page.jtl || true

      - name: Run JMeter - News Page
        run: |
          mkdir -p ./report/news-page
          if ! jmeter -n -t ./tests/jmeter-tests/news-page.jmx \
            -l ./report/news-page/news-page.jtl \
            -Jjmeter.save.saveservice.output_format=xml \
            -Jjmeter.save.saveservice.print_field_names=true \
            -Jjmeter.save.saveservice.response_data.on_error=true \
            -Jjmeter.save.saveservice.bytes=true \
            -Jjmeter.save.saveservice.timestamp_format=ms; then
            echo "JMETER_FAIL_newsPage=1" >> $GITHUB_ENV
            echo "❌ JMeter test execution failed: News Page" >> ./errors/summary.txt
          fi

          cp ./report/news-page/news-page.jtl ./result/news-page.jtl || true

      - name: FINAL VALIDATION & SUMMARY TEST REPORT 
        run: |
          if ! npx tsx scripts/home-page-jmeter-validator.ts; then
            echo "PARSER_FAIL_homePage=1" >> $GITHUB_ENV
            echo "❌ Load Test Results are FAILED: Home Page" >> ./errors/summary.txt
          fi

          if ! npx tsx scripts/documents-page-jmeter-validator.ts; then
            echo "PARSER_FAIL_documentsPage=1" >> $GITHUB_ENV
            echo "❌ Load Test Results are FAILED: Documents Page" >> ./errors/summary.txt
          fi

          if ! npx tsx scripts/news-page-jmeter-validator.ts; then
            echo "PARSER_FAIL_newsPage=1" >> $GITHUB_ENV
            echo "❌ Load Test Results are FAILED: News Page" >> ./errors/summary.txt
          fi

          echo "===== APACHE JMETER LOAD TESTS SUMMARY ====="
          if [ -f ./errors/summary.txt ]; then
            cat ./errors/summary.txt
            echo "========================"
            exit 1
          else
            echo "✅ All JMeter tests and parsers passed."
          fi
